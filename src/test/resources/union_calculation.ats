// Enter Code here ...
NestedWordAutomaton nwa1 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 },
	initialStates = {s7 },
	finalStates = {s0 s2 s3 s4 s5 s7 s8 s9 s10 s11 },
	callTransitions = {
		(s1 c1 s6)
		(s3 c1 s5)
		(s4 c0 s5)
	},
	internalTransitions = {
		(s0 a4 s2)
		(s2 a5 s8)
		(s5 a6 s9)
		(s5 a3 s3)
		(s6 a6 s0)
		(s6 a3 s1)
		(s7 a3 s1)
		(s9 a4 s11)
		(s11 a5 s10)
	},
	returnTransitions = {
		(s8 s1 r0 s4)
		(s10 s1 r0 s4)
		(s10 s3 r0 s4)
		(s10 s4 r1 s9)
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:38
//
//
// Testfile dumped by Ultimate at 2021/10/10 12:27:38
//
//

NestedWordAutomaton nwa2 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 },
	initialStates = {s12 },
	finalStates = {s0 s1 s2 s4 s8 s9 s12 s14 s15 s16 s17 s19 s20 s22 s24 s25 s26 s28 s29 s30 s31 },
	callTransitions = {
		(s1 c0 s21)
		(s1 c0 s22)
		(s2 c1 s20)
		(s3 c1 s27)
		(s4 c0 s21)
		(s4 c0 s22)
		(s5 c1 s23)
		(s6 c1 s13)
		(s7 c0 s21)
		(s7 c0 s22)
		(s8 c0 s20)
		(s15 c1 s16)
	},
	internalTransitions = {
		(s0 a4 s9)
		(s9 a5 s17)
		(s10 a4 s11)
		(s11 a5 s18)
		(s12 a3 s6)
		(s13 a6 s14)
		(s13 a3 s3)
		(s14 a4 s25)
		(s16 a3 s15)
		(s20 a6 s0)
		(s20 a3 s2)
		(s21 a3 s5)
		(s22 a6 s31)
		(s22 a3 s15)
		(s23 a6 s10)
		(s23 a3 s5)
		(s25 a5 s24)
		(s27 a6 s29)
		(s27 a3 s3)
		(s28 a5 s26)
		(s29 a4 s28)
		(s30 a5 s19)
		(s31 a4 s30)
	},
	returnTransitions = {
		(s17 s1 r1 s0)
		(s17 s2 r0 s8)
		(s17 s3 r0 s8)
		(s17 s5 r0 s8)
		(s17 s6 r0 s8)
		(s17 s7 r1 s0)
		(s17 s8 r1 s0)
		(s18 s5 r0 s7)
		(s19 s1 r1 s0)
		(s19 s7 r1 s0)
		(s24 s6 r0 s4)
		(s26 s3 r0 s1)
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:39
//
//

NestedWordAutomaton nwa3 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 s20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 },
	initialStates = {s32 },
	finalStates = {s0 s1 s2 s3 s7 s8 s14 s16 s17 s18 s20 s21 s22 s23 s24 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 s39 s40 s41 s42 s43 s44 },
	callTransitions = {
		(s1 c1 s8)
		(s2 c1 s8)
		(s5 c1 s26)
		(s7 c0 s27)
		(s9 c1 s10)
		(s12 c1 s11)
		(s12 c1 s29)
		(s13 c1 s11)
		(s13 c1 s29)
		(s17 c0 s21)
		(s18 c0 s21)
		(s19 c0 s24)
		(s19 c0 s25)
		(s20 c0 s21)
		(s22 c0 s24)
		(s22 c0 s25)
		(s23 c0 s24)
		(s23 c0 s25)
		(s33 c0 s21)
	},
	internalTransitions = {
		(s0 a4 s3)
		(s3 a5 s14)
		(s4 a4 s6)
		(s6 a5 s15)
		(s8 a6 s0)
		(s10 a3 s12)
		(s11 a3 s13)
		(s21 a6 s34)
		(s21 a3 s1)
		(s24 a6 s41)
		(s25 a3 s5)
		(s26 a6 s4)
		(s27 a3 s2)
		(s29 a6 s31)
		(s30 a5 s28)
		(s31 a4 s30)
		(s32 a3 s9)
		(s34 a4 s43)
		(s36 a4 s44)
		(s37 a4 s42)
		(s39 a5 s38)
		(s41 a4 s39)
		(s42 a5 s40)
		(s43 a5 s35)
		(s44 a5 s16)
	},
	returnTransitions = {
		(s14 s1 r0 s33)
		(s14 s2 r0 s20)
		(s15 s5 r0 s19)
		(s16 s12 r0 s17)
		(s16 s13 r0 s18)
		(s28 s12 r0 s22)
		(s28 s13 r0 s23)
		(s35 s22 r1 s37)
		(s35 s23 r1 s36)
		(s35 s33 r1 s34)
		(s35 s17 r1 s37)
		(s35 s18 r1 s36)
		(s35 s19 r1 s34)
		(s38 s22 r1 s37)
		(s38 s23 r1 s36)
		(s38 s19 r1 s34)
		(s40 s9 r0 s7)
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:41
//
//

NestedWordAutomaton nwa4 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {},
	initialStates = {},
	finalStates = {},
	callTransitions = {
	},
	internalTransitions = {
	},
	returnTransitions = {
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:39
//
//

NestedWordAutomaton nwa5 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 s6 },
	initialStates = {s1 },
	finalStates = {s0 },
	callTransitions = {
		(s1 c1 s1)
		(s2 c0 s4)
		(s4 c1 s5)
		(s6 c0 s4)
	},
	internalTransitions = {
		(s1 a6 s2)
		(s1 a3 s1)
		(s2 a4 s2)
		(s2 a5 s2)
		(s3 a4 s3)
		(s3 a5 s3)
		(s4 a6 s2)
		(s4 a3 s4)
		(s5 a6 s3)
		(s5 a3 s0)
		(s6 a4 s6)
		(s6 a5 s6)
	},
	returnTransitions = {
		(s2 s2 r1 s2)
		(s2 s1 r0 s6)
		(s2 s6 r1 s6)
		(s3 s4 r0 s2)
		(s6 s1 r0 s6)
	}
);


// Testfile dumped by Ultimate at 2021/10/10 12:27:36
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

NestedWordAutomaton nwa6 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 },
	initialStates = {s1 },
	finalStates = {s1 },
	callTransitions = {
		(s2 c1 s1)
	},
	internalTransitions = {
		(s0 a2 s0)
		(s0 a4 s0)
		(s0 a5 s0)
		(s1 a6 s0)
		(s1 a3 s2)
	},
	returnTransitions = {
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:38
//
// RefinementSetting [mInterpolantAutomaton=Deterministic, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=false, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

NestedWordAutomaton nwa7 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 },
	initialStates = {s2 },
	finalStates = {s1 },
	callTransitions = {
		(s1 c0 s0)
		(s2 c1 s3)
		(s3 c1 s3)
		(s4 c1 s0)
	},
	internalTransitions = {
		(s0 a6 s5)
		(s0 a3 s4)
		(s2 a3 s2)
		(s3 a6 s3)
		(s3 a3 s3)
		(s3 a4 s3)
		(s3 a5 s3)
		(s5 a4 s5)
		(s5 a5 s5)
	},
	returnTransitions = {
		(s3 s2 r0 s1)
		(s3 s3 r0 s1)
		(s5 s4 r0 s1)
	}
);

// Testfile dumped by Ultimate at 2021/10/10 12:27:39
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=true, mBouncerLoop=false, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

NestedWordAutomaton nwa8 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 },
	initialStates = {s1 },
	finalStates = {s2 },
	callTransitions = {
		(s1 c1 s3)
		(s1 c0 s3)
		(s2 c1 s4)
		(s3 c1 s3)
		(s3 c0 s3)
	},
	internalTransitions = {
		(s1 a3 s1)
		(s1 a3 s2)
		(s1 a4 s1)
		(s1 a5 s1)
		(s3 a6 s3)
		(s3 a3 s2)
		(s3 a3 s3)
		(s3 a4 s3)
		(s3 a5 s3)
		(s4 a6 s4)
		(s4 a3 s2)
		(s4 a4 s4)
		(s4 a5 s4)
	},
	returnTransitions = {
		(s3 s1 r0 s1)
		(s3 s1 r1 s1)
		(s3 s3 r0 s3)
		(s3 s3 r1 s3)
		(s4 s2 r0 s0)
	}
);


// Testfile dumped by Ultimate at 2021/10/10 12:27:41
//
// RefinementSetting [mInterpolantAutomaton=ScroogeNondeterminism, mBouncerStem=true, mBouncerLoop=true, mScroogeNondeterminismStem=true, mScroogeNondeterminismLoop=false, mCannibalizeLoop=false]

NestedWordAutomaton nwa9 = (
	callAlphabet = {c0 c1 },
	internalAlphabet = {a0 a1 a2 a3 a4 a5 a6 },
	returnAlphabet = {r0 r1 },
	states = {s0 s1 s2 s3 s4 s5 s6 s7 },
	initialStates = {s2 },
	finalStates = {s4 },
	callTransitions = {
		(s0 c0 s4)
		(s2 c1 s7)
		(s2 c0 s4)
		(s2 c0 s7)
		(s6 c1 s5)
		(s7 c1 s7)
		(s7 c0 s4)
		(s7 c0 s7)
	},
	internalTransitions = {
		(s1 a4 s1)
		(s1 a5 s1)
		(s2 a3 s2)
		(s3 a4 s3)
		(s3 a5 s3)
		(s4 a6 s1)
		(s4 a3 s6)
		(s5 a6 s3)
		(s7 a6 s7)
		(s7 a3 s7)
		(s7 a4 s7)
		(s7 a5 s7)
	},
	returnTransitions = {
		(s3 s6 r0 s0)
		(s7 s2 r0 s2)
		(s7 s7 r0 s7)
		(s7 s7 r1 s7)
	}
);


NestedWordAutomaton nwa12 = union(nwa1, nwa2);
NestedWordAutomaton nwa123 = union(nwa12, nwa3);
NestedWordAutomaton nwa1234 = union(nwa123, nwa4);
NestedWordAutomaton nwa12345 = union(nwa1234, nwa5);
NestedWordAutomaton nwa123456 = union(nwa12345, nwa6);
NestedWordAutomaton nwa1234567 = union(nwa123456, nwa7);
NestedWordAutomaton nwa12345678 = union(nwa1234567, nwa8);
NestedWordAutomaton nwa123456789 = union(nwa12345678, nwa9);
NestedWordAutomaton reduced = relabel(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(shrinkNwa(nwa123456789))))))))))))))));
print(numberOfTransitions(reduced));
print(reduced);
